import React from "react";

// const SpeedGauge = ({ percentage }) => {
//     // Segments in order (20%, 20%, 20%, 40%)
//     const segments = [20, 20, 20, 40];

//     let remaining = percentage;
//     const colors = segments.map((seg) => {
//         if (remaining >= seg) {
//             remaining -= seg;
//             return "#13CE66"; // full green
//         } else {
//             remaining = 0;
//             return "#F5F5F5"; // gray
//         }
//     });

//     return (
//         <div className="relative w-[233px] h-[128px] mx-auto">
//             {/* Base SVG */}
//             <svg
//                 width="233"
//                 height="128"
//                 viewBox="0 0 233 128"
//                 fill="none"
//                 xmlns="http://www.w3.org/2000/svg"
//                 className="absolute top-0 left-0"
//             >
//                 <path
//                     d="M230.976 138.12C234.101 121.577 233.602 104.553 229.516 88.2215C225.429 71.8896 217.852 56.6374 207.305 43.5152C196.758 30.393 183.492 19.7127 168.421 12.2096C153.35 4.70654 136.832 0.559033 120.004 0.0527008C103.176 -0.453631 86.4384 2.69324 70.9435 9.27661C55.4487 15.86 41.5647 25.7234 30.2478 38.1877C18.9309 50.652 10.4499 65.421 5.38884 81.4777C0.327772 97.5344 -1.19312 114.497 0.930906 131.198L33.2902 127.083C31.761 115.058 32.856 102.845 36.5 91.284C40.1439 79.7231 46.2503 69.0895 54.3984 60.1152C62.5466 51.1409 72.543 44.0392 83.6993 39.2992C94.8556 34.5591 106.907 32.2934 119.023 32.6579C131.139 33.0225 143.032 36.0087 153.883 41.4109C164.734 46.8131 174.285 54.503 181.879 63.9509C189.473 73.3989 194.929 84.3805 197.871 96.1395C200.814 107.898 201.172 120.155 198.923 132.066L230.976 138.12Z"
//                     fill="#F5F5F5"
//                 />
//             </svg>

//             {/* Segments */}
//             <div className="absolute inset-0">
//                 {/* Segment 1 (20%) */}
//                 <svg
//                     width="47"
//                     height="65"
//                     viewBox="0 0 47 65"
//                     className="absolute top-[63px] left-0"
//                 >
//                     <path
//                         d="M19.0391 1.42683C16.1164 -0.134758 12.466 0.962723 11.057 3.96192C2.55318 22.062 -1.16256 42.0808 0.317244 62.0917C1.79704 82.1026 8.41704 101.357 19.4907 118.009C21.3257 120.769 25.0977 121.317 27.7589 119.343L44.3186 107.056C46.9798 105.082 47.5164 101.334 45.7371 98.5386C38.3149 86.8773 33.8724 73.5332 32.8484 59.686C31.8244 45.8389 34.2557 31.9864 39.8819 19.3602C41.2306 16.3333 40.1486 12.7056 37.2259 11.144L19.0391 1.42683Z"
//                         fill={colors[0]}
//                     />
//                 </svg>

//                 {/* Segment 2 (20%) */}
//                 <svg
//                     width="55"
//                     height="55"
//                     viewBox="0 0 55 55"
//                     className="absolute top-[17px] left-4.5"
//                 >
//                     <path
//                         d="M42.6427 3.75034C40.9376 0.90896 37.2421 -0.0250416 34.4922 1.82402C21.2739 10.7124 10.0177 22.2181 1.42145 35.6283C-0.366852 38.418 0.647982 42.0922 3.52608 43.7345L21.4354 53.9541C24.3135 55.5964 27.9604 54.5805 29.8042 51.8271C35.5565 43.2372 42.848 35.784 51.3097 29.8447C54.022 27.9409 54.9577 24.2726 53.2526 21.4312L42.6427 3.75034Z"
//                         fill={colors[1]}
//                     />
//                 </svg>

//                 {/* Segment 3 (20%) */}
//                 <svg
//                     width="66"
//                     height="42"
//                     viewBox="0 0 66 42"
//                     className="absolute top-[-2px] left-15.5"
//                 >
//                     <path
//                         d="M65.618 6.4642C65.9214 3.16442 63.4918 0.227196 60.1807 0.0940234C40.7051 -0.689306 21.3411 3.42749 3.86855 12.066C0.898067 13.5347 -0.126541 17.2063 1.49304 20.0972L11.5711 38.0866C13.1907 40.9775 16.8394 41.9869 19.8387 40.5781C31.5125 35.0947 44.296 32.3769 57.1909 32.637C60.504 32.7038 63.4265 30.2974 63.7299 26.9976L65.618 6.4642Z"
//                         fill={colors[2]}
//                     />
//                 </svg>

//                 {/* Segment 4 (40%) */}
//                 <svg
//                     width="100"
//                     height="89"
//                     viewBox="0 0 100 89"
//                     className="absolute top-[0px] right-1.5"
//                 >
//                     <path
//                         d="M94.891 82.2888C98.0515 81.2929 99.821 77.9167 98.6637 74.8117C91.5621 55.7582 79.5822 38.8596 63.8782 25.8332C48.1741 12.8068 29.3528 4.15585 9.31512 0.697478C6.0497 0.133887 3.05865 2.4968 2.66389 5.78691L0.207428 26.2601C-0.187332 29.5502 2.16591 32.5156 5.41939 33.1445C19.228 35.8136 32.1781 41.9198 43.0523 50.9399C53.9265 59.96 62.3206 71.5587 67.4954 84.6362C68.7147 87.7175 72.0639 89.4822 75.2244 88.4863L94.891 82.2888Z"
//                         fill={colors[3]}
//                     />
//                 </svg>
//             </div>
//         </div>
//     );
// };

const SpeedGauge = ({ percentage = 0 }) => {
    // clamp % to [0,100]
    const pct = Math.max(0, Math.min(100, Number(percentage) || 0));

    // segments: capacity + svg data + position
    const segments = [
        {
            cap: 20,
            viewBox: "0 0 47 65",
            d: "M19.0391 1.42683C16.1164 -0.134758 12.466 0.962723 11.057 3.96192C2.55318 22.062 -1.16256 42.0808 0.317244 62.0917C1.79704 82.1026 8.41704 101.357 19.4907 118.009C21.3257 120.769 25.0977 121.317 27.7589 119.343L44.3186 107.056C46.9798 105.082 47.5164 101.334 45.7371 98.5386C38.3149 86.8773 33.8724 73.5332 32.8484 59.686C31.8244 45.8389 34.2557 31.9864 39.8819 19.3602C41.2306 16.3333 40.1486 12.7056 37.2259 11.144L19.0391 1.42683Z",
            className: "absolute top-[63px] left-0",
            id: "seg1",
            size: { w: 47, h: 65 },
        },
        {
            cap: 20,
            viewBox: "0 0 55 55",
            d: "M42.6427 3.75034C40.9376 0.90896 37.2421 -0.0250416 34.4922 1.82402C21.2739 10.7124 10.0177 22.2181 1.42145 35.6283C-0.366852 38.418 0.647982 42.0922 3.52608 43.7345L21.4354 53.9541C24.3135 55.5964 27.9604 54.5805 29.8042 51.8271C35.5565 43.2372 42.848 35.784 51.3097 29.8447C54.022 27.9409 54.9577 24.2726 53.2526 21.4312L42.6427 3.75034Z",
            className: "absolute top-[17px] left-[18px]", // was left-4.5
            id: "seg2",
            size: { w: 55, h: 55 },
        },
        {
            cap: 20,
            viewBox: "0 0 66 42",
            d: "M65.618 6.4642C65.9214 3.16442 63.4918 0.227196 60.1807 0.0940234C40.7051 -0.689306 21.3411 3.42749 3.86855 12.066C0.898067 13.5347 -0.126541 17.2063 1.49304 20.0972L11.5711 38.0866C13.1907 40.9775 16.8394 41.9869 19.8387 40.5781C31.5125 35.0947 44.296 32.3769 57.1909 32.637C60.504 32.7038 63.4265 30.2974 63.7299 26.9976L65.618 6.4642Z",
            className: "absolute top-[-2px] left-[62px]", // was left-15.5
            id: "seg3",
            size: { w: 66, h: 42 },
        },
        {
            cap: 40,
            viewBox: "0 0 100 89",
            d: "M94.891 82.2888C98.0515 81.2929 99.821 77.9167 98.6637 74.8117C91.5621 55.7582 79.5822 38.8596 63.8782 25.8332C48.1741 12.8068 29.3528 4.15585 9.31512 0.697478C6.0497 0.133887 3.05865 2.4968 2.66389 5.78691L0.207428 26.2601C-0.187332 29.5502 2.16591 32.5156 5.41939 33.1445C19.228 35.8136 32.1781 41.9198 43.0523 50.9399C53.9265 59.96 62.3206 71.5587 67.4954 84.6362C68.7147 87.7175 72.0639 89.4822 75.2244 88.4863L94.891 82.2888Z",
            className: "absolute top-0 right-1.5",
            id: "seg4",
            size: { w: 100, h: 89 },
        },
    ];

    // compute per-segment progress (0..1)
    let remaining = pct;
    const progress = segments.map((s) => {
        const p = Math.max(0, Math.min(1, remaining / s.cap));
        remaining = Math.max(0, remaining - s.cap);
        return p;
    });

    const GREEN = "#13CE66";
    const GRAY = "#F5F5F5";

    return (
        <div className="relative w-[233px] h-[128px] mx-auto">
            {/* Base SVG */}
            <svg
                width="233"
                height="128"
                viewBox="0 0 233 128"
                className="absolute top-0 left-0"
            >
                <path
                    d="M230.976 138.12C234.101 121.577 233.602 104.553 229.516 88.2215C225.429 71.8896 217.852 56.6374 207.305 43.5152C196.758 30.393 183.492 19.7127 168.421 12.2096C153.35 4.70654 136.832 0.559033 120.004 0.0527008C103.176 -0.453631 86.4384 2.69324 70.9435 9.27661C55.4487 15.86 41.5647 25.7234 30.2478 38.1877C18.9309 50.652 10.4499 65.421 5.38884 81.4777C0.327772 97.5344 -1.19312 114.497 0.930906 131.198L33.2902 127.083C31.761 115.058 32.856 102.845 36.5 91.284C40.1439 79.7231 46.2503 69.0895 54.3984 60.1152C62.5466 51.1409 72.543 44.0392 83.6993 39.2992C94.8556 34.5591 106.907 32.2934 119.023 32.6579C131.139 33.0225 143.032 36.0087 153.883 41.4109C164.734 46.8131 174.285 54.503 181.879 63.9509C189.473 73.3989 194.929 84.3805 197.871 96.1395C200.814 107.898 201.172 120.155 198.923 132.066L230.976 138.12Z"
                    fill={GRAY}
                />
            </svg>

            {/* Segments with partial fill */}
            <div className="absolute inset-0">
                {segments.map((s, i) => {
                    const pid = `clip-${s.id}`;
                    const p = progress[i]; // 0..1
                    return (
                        <svg
                            key={s.id}
                            width={s.size.w}
                            height={s.size.h}
                            viewBox={s.viewBox}
                            className={s.className}
                        >
                            <defs>
                                <clipPath id={pid}>
                                    <path d={s.d} />
                                </clipPath>
                            </defs>

                            {/* base gray */}
                            <rect
                                x="0"
                                y="0"
                                width="100%"
                                height="100%"
                                clipPath={`url(#${pid})`}
                                fill={GRAY}
                            />

                            {/* green progress (left -> right) */}
                            {p > 0 && (
                                <rect
                                    x="0"
                                    y="0"
                                    width={`${p * 100}%`}
                                    height="100%"
                                    clipPath={`url(#${pid})`}
                                    fill={GREEN}
                                />
                            )}
                        </svg>
                    );
                })}
            </div>
        </div>
    );
};


export default SpeedGauge;
